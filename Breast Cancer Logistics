{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Breast Cancer Logistics","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"JQbRD-tKbeVn"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n"]},{"cell_type":"code","source":["dataset = pd.read_csv('/content/breast cancer dataset.csv')"],"metadata":{"id":"-Nr1dVEXxEbh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","X = dataset.iloc[:, :-1].values\n","y = dataset.iloc[:, -1].values\n"],"metadata":{"id":"WTS8kNGPboH7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","imputer = SimpleImputer(missing_values=np.nan, strategy='mean') \n","imputer.fit(dataset.iloc[:,  : -1])\n","dataset.iloc[:,  : -1] = imputer.transform (dataset.iloc[:,  : -1])"],"metadata":{"id":"vk2HF5SIxVGt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = dataset.iloc[:, :-1].values\n","y = dataset.iloc[:, -1].values"],"metadata":{"id":"kuhtzedYxiV3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# splitting X and y into training and testing sets\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)\n"],"metadata":{"id":"5F_KyyEjcW2S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_train)\n","X_test = sc.transform(X_test)\n"],"metadata":{"id":"F-zHe8Cdb68f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_val = train_test_split(X, y, test_size = 0.20, random_state = 0)"],"metadata":{"id":"x6SMVZIyZvbF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fitting Logistic Regression to the Training set\n","from sklearn.linear_model import LogisticRegression\n","classifier = LogisticRegression(random_state = 0)\n","classifier.fit(X_train, y_train)"],"metadata":{"id":"OiBrqQ7UcEAt","executionInfo":{"status":"ok","timestamp":1644682157099,"user_tz":-330,"elapsed":548,"user":{"displayName":"Akash Singh","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12779687995118795449"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9acf4a6d-2724-449a-d222-fc94e5d066de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(random_state=0)"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# Predicting the Test set results\n","y_pred = classifier.predict(X_test)\n"],"metadata":{"id":"_vZ_yZ_BccJI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Making the Confusion Matrix\n","from sklearn.metrics import confusion_matrix, accuracy_score\n","classifier = confusion_matrix(y_test, y_pred)\n","acc_score = accuracy_score(y_test, y_pred)\n","print(acc_score*100)\n","print(classifier)"],"metadata":{"id":"R-KVlxt5cgtp","executionInfo":{"status":"ok","timestamp":1644682157100,"user_tz":-330,"elapsed":9,"user":{"displayName":"Akash Singh","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12779687995118795449"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0101d8d7-464b-4799-c0e0-a46b426742fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["41.228070175438596\n","[[ 0 67]\n"," [ 0 47]]\n"]}]}]}